<!doctype html>
<html lang="mk">
<head>
  <meta charset="utf-8">
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Operations Dashboard v2</title>
  <style>
    :root{
      --bg:#0b0d12; --panel:#121826; --text:#e5e7eb; --muted:#9ca3af;
      --accent:#2563eb; --border:#1f2937; --panel2:#0f172a;
    }
    *{box-sizing:border-box}
    html,body{height:100%}
    body{
      margin:0; font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Noto Sans",
      "Helvetica Neue", Arial, "Apple Color Emoji","Segoe UI Emoji";
      color:var(--text);
      background:linear-gradient(180deg, #0b0d12 0%, #0f172a 100%);
    }
    header{
      padding:24px; border-bottom:1px solid var(--border);
      position:sticky; top:0; background:rgba(11,13,18,.85); backdrop-filter:blur(6px); z-index:10;
    }
    h1{margin:0; font-size:24px; letter-spacing:.2px}
    .muted{color:var(--muted); margin-top:6px; font-size:13px}

    main{padding:24px; display:grid; gap:24px}
    .grid{display:grid; grid-template-columns:repeat(auto-fit, minmax(320px,1fr)); gap:24px}

    .card{
      background:var(--panel); border:1px solid var(--border); border-radius:14px;
      padding:16px; box-shadow:0 10px 30px rgba(0,0,0,.25);
    }
    .card h2{margin:0 0 8px 0; font-size:18px; color:#dbeafe}

    .table-wrap{overflow:auto; background:var(--panel); border:1px solid var(--border); border-radius:14px}
    table{width:100%; border-collapse:collapse; font-size:14px}
    th,td{padding:10px 12px; border-bottom:1px solid var(--border)}
    th{
      text-align:left; position:sticky; top:0; background:var(--panel2);
      cursor:pointer; user-select:none;
    }
    tr:hover td{background:rgba(37,99,235,.06)}
    a{color:#93c5fd; text-decoration:none}
    a:hover{text-decoration:underline}
    .empty{padding:12px; color:var(--muted)}
    footer{padding:16px 24px; border-top:1px solid var(--border); color:var(--muted)}
    /* Make plotly blocks responsive */
    .plotly-graph-div{width:100% !important; height:auto !important}
  </style>
</head>
<body>
  <header>
    <h1>Operations Dashboard v2</h1>
    <div class="muted">Генерирано: {{ generated_at }}</div>
  </header>

  <main>
    <!-- Графици -->
    <section class="grid">
      <article class="card">
        <h2>Распределба на €/m² по категорија</h2>
        <div id="chart_dist">{{ plot_dist | safe }}</div>
      </article>

      <article class="card">
        <h2>Површина vs Цена</h2>
        <div id="chart_scatter">{{ plot_scatter | safe }}</div>
      </article>

      <article class="card">
        <h2>Топ општини по медијана €/m²</h2>
        <div id="chart_top_munis">{{ plot_top_munis | safe }}</div>
      </article>

      <article class="card">
        <h2>Обем на огласи по старост</h2>
        <div id="chart_volume">{{ plot_volume | safe }}</div>
      </article>
    </section>

    <!-- Табела -->
    <section class="card">
      <h2>Топ записи (според score/свежина)</h2>
      {% if rows and columns %}
      <div class="table-wrap">
        <table id="data">
          <thead>
            <tr>
              {% for c in columns %}<th>{{ c }}</th>{% endfor %}
            </tr>
          </thead>
          <tbody>
            {% for r in rows %}
            <tr>
              {% for c in columns %}
                <td>
                  {% if c == 'url' and r[c] %}
                    <a href="{{ r[c] }}" target="_blank" rel="noopener">{{ r[c] }}</a>
                  {% else %}
                    {{ r[c] }}
                  {% endif %}
                </td>
              {% endfor %}
            </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
      {% else %}
        <div class="empty">Нема податоци за табела. Пушти crawl најпрво.</div>
      {% endif %}
    </section>
  </main>

  <footer>
    <small>© {{ generated_at.split(' ')[0] }} • Автоматски извештај</small>
  </footer>

  <!-- Едноставно сортирање по клик на header-от -->
  <script>
    (function(){
      const table = document.getElementById('data');
      if(!table) return;
      const ths = table.querySelectorAll('th');
      const tbody = table.querySelector('tbody');
      ths.forEach((th, idx) => {
        th.addEventListener('click', () => {
          const rowsArr = Array.from(tbody.querySelectorAll('tr'));
          const dir = th.dataset.dir === 'asc' ? 'desc' : 'asc';
          th.dataset.dir = dir;
          rowsArr.sort((a,b)=>{
            const ta = a.children[idx].innerText.trim();
            const tb = b.children[idx].innerText.trim();
            const na = parseFloat(ta.replace(/[^\d.-]/g,'')); 
            const nb = parseFloat(tb.replace(/[^\d.-]/g,''));
            if(!isNaN(na) && !isNaN(nb)){
              return dir==='asc' ? na-nb : nb-na;
            }
            return dir==='asc' ? ta.localeCompare(tb) : tb.localeCompare(ta);
          });
          rowsArr.forEach(r=>tbody.appendChild(r));
        });
      });
    })();
  </script>
</body>
</html>
